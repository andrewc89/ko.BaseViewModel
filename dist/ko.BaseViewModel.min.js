!function(ko){ko.dirtyFlag=function(root,isInitiallyDirty){var result=function(){},_initialState=ko.observable(ko.toJSON(root)),_isInitiallyDirty=ko.observable(isInitiallyDirty);return result.isDirty=ko.computed(function(){return _isInitiallyDirty()||_initialState()!==ko.toJSON(root)}),result.reset=function(){_initialState(ko.toJSON(root)),_isInitiallyDirty(!1)},result}}(ko),function($,ko){"use strict";ko.BaseViewModel=function(){function resetDirtyItems(){self.dirtyItems().map(function(item){item.dirtyFlag.reset()})}var self=this;self.items=ko.observableArray([]),self.newItem={},self.resetNewItem=function(){},self.dirtyItems=ko.computed(function(){return self.items().filter(function(item){return item.dirtyFlag.isDirty()})}),self.isDirty=ko.computed(function(){return self.dirtyItems().length>0}),self.messages=ko.observableArray([]),self.addItem=function(){},self.save=function(item,url,success){$.ajax({type:"post",data:JSON.stringify(item),contentType:"application/json",traditional:!0,dataType:"json",url:url,success:success,error:self.error})},self.update=function(item,url,success){$.ajax({type:"put",data:JSON.stringify(item),contentType:"application/json",traditional:!0,dataType:"json",url:url,success:success,error:self.error})},self.saveChanges=function(){},self._saveChanges=function(data,url,callback){$.ajax({type:"put",data:JSON.stringify(data),contentType:"application/json",traditional:!0,dataType:"json",url:url,success:function(result){resetDirtyItems(),result.message&&self.messages([result.message]),"function"==typeof callback&&callback()},error:self.error})},self.removeItem=function(){},self.confirmDeletion=function(callback){$("#dialog").dialog({resizable:!1,modal:!0,buttons:{Delete:callback,Cancel:function(){$(this).dialog("close")}}})},self.deleteItem=function(item,url,success){$.ajax({type:"delete",data:item?JSON.stringify({id:item.id}):{},url:url,success:success,error:self.error})},self.load=function(){},self.error=function(XHR,text,err){self.messages([text+": "+err])}}}(jQuery,ko);